buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.5"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "io.spring.dependency-management"
apply plugin: "net.ltgt.apt"
apply plugin: 'application'



project.ext {
    dropwizardVersion = '0.9.2'
    dropwizardJava8Version = '0.9.0-1'
    slf4jVersion = '1.7.14'
    daggerVersion = '2.0.2'
    testNGVersion = '6.9.10'
    twilioVersion = '3.4.5'
    awsVersion = '1.10.58'
    mySqlConnectorVersion = '5.1.38'
    guavaVersion = '18.0'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencyManagement {
    imports {
        mavenBom "com.amazonaws:aws-java-sdk-bom:$awsVersion"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile(
            "io.dropwizard:dropwizard-core:$dropwizardVersion",
            "io.dropwizard:dropwizard-auth:$dropwizardVersion",
            "io.dropwizard:dropwizard-testing:$dropwizardVersion",
            "io.dropwizard:dropwizard-client:$dropwizardVersion",
            "io.dropwizard:dropwizard-hibernate:$dropwizardVersion",
            "io.dropwizard:dropwizard-migrations:$dropwizardVersion",
            "io.dropwizard.modules:dropwizard-java8:$dropwizardJava8Version",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "com.google.dagger:dagger:$daggerVersion",
            "mysql:mysql-connector-java:$mySqlConnectorVersion",
            "com.twilio.sdk:twilio-java-sdk:$twilioVersion",

            'com.amazonaws:aws-java-sdk-s3',
            "com.lambdaworks:scrypt:1.4.0",
            "io.jsonwebtoken:jjwt:0.6.0",
    )
    compile("com.google.api-client:google-api-client:1.19.1") {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    testCompile "org.testng:testng:$testNGVersion"
    testCompile group: 'junit', name: 'junit', version: '4.11'
    apt "com.google.dagger:dagger-compiler:$daggerVersion"

}

compileJava {
    options.compilerArgs += [
            "-s", project.projectDir.absolutePath + '/build/generated/source/apt/main'
    ]
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

mainClassName = 'com.netegreek.chattr.CoopApplication'

task dbCreate(type: JavaExec) {
    classpath = run.classpath
    main = mainClassName
    args 'db' ,'create', 'config.yml'
}


task dbMigrate(type: JavaExec) {
    ext.srcFile = new File(sourceSets.main.resources.srcDirs.first(), "migrations.xml")
    ext.destDir = new File(buildDir, 'ran-migrations')
    inputs.file srcFile
    outputs.file new File(destDir, "migrations.xml")

    classpath = run.classpath
    main = mainClassName
    args 'db', 'migrate', 'config.yml'

    doLast {
        copy {
            from srcFile
            into destDir
        }
    }
}

// Configure the run task to start the Dropwizard service
run {
    args 'server', 'config.yml'
}

def shadowBaseDir = new File(buildDir, "libs")

shadowJar {
    mergeServiceFiles()
    archiveName = "coop-all.jar"
    destinationDir = shadowBaseDir
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}


test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging {
        showStandardStreams = true
        displayGranularity = 2
        exceptionFormat = 'full'
        events 'started', 'passed'
    }
}